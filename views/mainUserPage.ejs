<!doctype html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

    <title>Personale</title>
    <style>
        .center {
            margin: auto;
            width: 80%;
            padding: 5px;
            text-align: center;
        }

        * {
            box-sizing: border-box;
        }

        ul {
            list-style-type: none;
            padding: 0;
            margin: 0;
            border: 3px solid black;

        }

        ul li {
            border: 1px solid #ddd;
            margin-top: -1px;
            /* Prevent double borders */
            background-color: #ffffff;
            padding: 12px;
            text-decoration: none;
            font-size: 15px;
            color: black;
            display: block;
            position: relative;
        }

        .close {
            cursor: pointer;
            position: absolute;
            top: 50%;
            right: 0%;
            padding: 12px 16px;
            transform: translate(0%, -50%);
            background-color: rgb(0, 0, 0);
        }

        .close:hover {
            background: rgb(255, 253, 253);
        }

        hr.dashed {
            border-top: 3px dashed #bbb;
        }
    </style>
</head>



<body>
    <!-- HELLO NAME -->
    <div class="container">
        <h1>
            Ciao <%= name %>
        </h1>
    </div>

    <!-- ACCEPT MESSAGE  -->
    <!-- Modal autotrigger // check for the opened -->
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">LA PALESTRA METTERA' IN ATTO TUTTE LE MISURE DI SICUREZZA COME DA <a href="http://www.sport.governo.it/media/2135/linee-guida-sport-di-base-e-attivita-motoria.pdf">DECRETO</a></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container" style="text-align: center;">
                        <h5><b>Il cliente Kinesis è tenuto a :</b></h5>
                    </div>
                    
                    <p>1. Unirsi al canale telegram della Kinesis per rimanere costantemente aggiornato su cambiamenti, direttive e informazioni importanti <a href="https://t.me/kinesismovimento">UNISCITI</a></p>
                    <p>2. Disinfettare ogni macchina dopo averla utilizzata e usare sempre il proprio telo su ognuna (Per un'igiene maggiore si consiglia di portarsi il proprio tappetino)</p>
                    <p>3. Si consiglia di arrivare in palestra già cambiati e di riporre le proprie cose in una borsa chiusa (non possono esserci indumenti sparsi nello spogliatoio)</p>
                    <p>4. Venire in palestra solo se le proprie condizioni di salute sono ottimali e sempre obbligatoriamente munito di mascherina</p>
                    <p>5. Rispettare assolutamente gli orari della fascia oraria stabilita, sia in entrata che in uscita, per permettere a tutti di usufruire del servizio</p>
                    <p>6. Non è possibile fare la doccia dopo l'allenamento</p>
                    <p>7. Non spostare le macchine presenti in sala in quanto la loro posizione rispetta i due metri obbligatori di distanziamento. Tutta l'attrezzatura deve essere sempre riposta in ordine</p>
                    <p>8. Kinesis si riserva il diritto di modificare le fasce orarie di apertura della palestra a seconda dello sviluppo e della frequenza delle stesse previa comunicazione sul canale Telegram</p>
                    <p>9. Il rispetto reciproco permetterà di ritrovare il giusto equilibrio di salute, benessere e divertimento</p>
                    <p>AUTOCERTIFICAZIONE: al primo ingresso, ogni frequentatore deve compilare e firmare l’autocertificazione (per i minori, serve la firma del genitore)</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal"
                        onclick="accept()">Accetta</button>
                </div>
            </div>
        </div>
    </div>

    <!-- toast for the message -->
    <% if (typeof msg != 'undefined') {%>
    <div class="container">

        <div class="toast" role="alert" data-delay="3000" data-autohide="true">
            <div class="toast-header">
                <strong class="mr-auto text-primary"><%= msg %></strong>
            </div>
        </div>

    </div>
    <% }; %>

    <!-- esporre lezioni a cui ci si è prenotati -->
    </br>
    <div class="container" id="viewLessonsBooked">

    </div>

    <div class="container">
        <hr class="dashed">
    </div>

    <!-- lezioni a cui ci si può iscrivere -->
    <div class="container">
        <div class="row justify-content-center" id="fill" style="display: inline">

        </div>
    </div>



    <!-- ///////////////////////////////////////////////////// SCRIPTS //////////////////////////////////////////////////// -->
    <script>

        // visualizzazione delle lezioni prenotate 
        window.onload = function () {
            var xhttp1 = new XMLHttpRequest();
            xhttp1.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {

                    let lessonsBookedJson = JSON.parse(this.responseText);
                    console.log(lessonsBookedJson);

                    let stackResults = '';
                    if (isEmpty(lessonsBookedJson)) {
                        stackResults = '<h5>Fai click sulla fascia oraria che desideri</h5>';
                    } else {
                        stackResults = '<h3>LE TUE PRENOTAZIONI</h3>';
                        stackResults = stackResults + '<ul>';
                        for (var obj in lessonsBookedJson) {
                            let name = lessonsBookedJson[obj].name;
                            let id_lesson = lessonsBookedJson[obj].id_lesson;
                            let day = lessonsBookedJson[obj].day;
                            let dayDateFormat = new Date(day);
                            let d = dayDateFormat.getDay();
                            let dX = dayDateFormat.getDate();
                            let m = dayDateFormat.getMonth() + 1;
                            let y = dayDateFormat.getFullYear();
                            let dayString = getDayString(d);
                            let newDay = dayString + " " + dX + "/" + m + "/" + y;
                            let time = lessonsBookedJson[obj].time;

                            // se ci sono più di 5 persone la lezione è garantita
                            let remember = "Schiaccia la X se non vieni!";

                            let displayLesson = '<li>' + name + '</br> ' + newDay + '  h:' + time +
                                '<span class="close"><a href="/courses/book/delete?user=<%=user%>&idLesson=' + id_lesson + '&name=<%=name%>" >&times</a>' +
                                '</span><p><b>' + remember + '</b></p></li>';


                            stackResults = stackResults + displayLesson;
                        }
                        stackResults = stackResults + '</ul>';
                    }

                    document.getElementById("viewLessonsBooked").innerHTML = stackResults;

                }
                else if (this.status == 400 || this.status == 500 || this.status == 505 || this.status == 404 || this.status == 403) {
                    document.getElementById("fill").innerHTML = "Impossibile recuperare lista delle lezioni prenotate";
                }
            };
            xhttp1.open("GET", '/courses/book/view/?user=<%=user%>', true);
            xhttp1.send();



            // visualizzazione prenotazioni effettuabili
            var xhttp2 = new XMLHttpRequest();
            xhttp2.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {

                    let lessonsJson = JSON.parse(this.responseText);
                    console.log(lessonsJson);

                    // divide json into two groups, one for the main sala and one for the courses

                    let stackResultsSala = '<div class="card" style="margin-bottom: 10px">' +
                        '<h5 class="card-header" style="background-color:#ff7315">SALA<h5>';

                    let stackResultsCourses = '</br><div class="card" style="margin-bottom: 10px">' +
                        '<h5 class="card-header" style="background-color:#5fdde5">CORSI<h5>';

                    // check Sala
                    for (var obj in lessonsJson) {

                        let id_course = lessonsJson[obj]._id;
                        let nameCourse = lessonsJson[obj].name;
                        let day = new Date(lessonsJson[obj].day);
                        let dd = day.getDate();
                        let mm = day.getMonth() + 1;
                        let yy = day.getFullYear();
                        let d = day.getDay();
                        let dayString = getDayString(d);
                        day = dayString + '  -  ' + dd + '/' + mm + '/' + yy;
                        let time = 'Orario : ' + lessonsJson[obj].time;
                        let seats = lessonsJson[obj].seats;

                        if (lessonsJson[obj].uuid == "5ebd6a3e61e7ac7ff79a2c0d") {
                            let displayCourses =
                                '<div class="card-text" style="background-color: #f4f4f4; border-style: solid; padding-top: 2%; padding-left: 2%;">' +
                                '<div class="row">' +
                                '<div class="col-8">' +
                                '<h6 class="card-title">' +
                                day +
                                '<p>' +
                                time +
                                '</p>' +
                                '<p>' +
                                'Posti Disponibili : ' + seats +
                                '</p>' +
                                '</h6>' +
                                '</div>' +
                                '<div class="col-4">' +
                                '<a href="/courses/book/prenotations/?user=<%=user%>&name=<%=name%>&id=' + id_course +
                                '&seats=' + seats +
                                '" class="btn btn-primary">Prenota</a>' +
                                '</div>' +
                                '</div>' +
                                '</div>';

                            stackResultsSala = stackResultsSala + displayCourses;
                        } 
                        if (lessonsJson[obj].uuid == "5ec535a78a8315bd36ad973b"){
                            let displayCourses =
                                '<div class="card-text" style="background-color: #f4f4f4; border-style: solid; padding-top: 2%; padding-left: 2%;">' +
                                '<div class="row">' +
                                '<div class="col-8">' +
                                '<h6 class="card-title">' +
                                '<p>' + nameCourse + '</p>' + 
                                day + 
                                '<p>' +
                                time +
                                '</p>' +
                                '<p>' +
                                'Posti Disponibili : ' + seats +
                                '</p>' +
                                '</h6>' +
                                '</div>' +
                                '<div class="col-4">' +
                                '<a href="/courses/book/prenotations/?user=<%=user%>&name=<%=name%>&id=' + id_course +
                                '&seats=' + seats +
                                '" class="btn btn-primary">Prenota</a>' +
                                '</div>' +
                                '</div>' +
                                '</div>';

                                stackResultsCourses = stackResultsCourses + displayCourses;
                        }
                    }
                    stackResultsSala = stackResultsSala + '</div>';
                    stackResultsCourses = stackResultsCourses + '</div>';

                    document.getElementById("fill").innerHTML = stackResultsSala + stackResultsCourses;

                }
                else if (this.status == 400 || this.status == 500 || this.status == 505 || this.status == 404 || this.status == 403) {
                    document.getElementById("fill").innerHTML = "Errore";
                }
            };
            xhttp2.open("GET", '/courses/book', true);
            xhttp2.send();

            // check contract 
            var xhttp3 = new XMLHttpRequest();
            xhttp3.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    if (this.responseText == 1) {
                        $('#exampleModal').modal('show');
                    }
                    // not show dialog 
                    if (this.responseText == 2) {
                        console.log("CONTRACT ALREADY FIRMED");
                    }
                }
            };
            xhttp3.open("GET", '/user/checkContract/?user=<%=user%>', true);
            xhttp3.send();
        }

        // accept contract 
        function accept() {
            var xhttp3 = new XMLHttpRequest();
            xhttp3.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    console.log(this.responseText);
                    // show dialog 
                }
            };
            xhttp3.open("GET", '/user/accept/?user=<%=user%>', true);
            xhttp3.send();
        }


        // check if object is empty 
        function isEmpty(obj) {
            for (var prop in obj) {
                return false;
            }
            return true;
        }

        // given date return String of day 
        function getDayString(d) {
            switch (d) {
                case 0:
                    return "Domenica";
                    break;
                case 1:
                    return "Lunedi";
                    break;
                case 2:
                    return "Martedi";
                    break;
                case 3:
                    return "Mercoledi";
                    break;
                case 4:
                    return "Giovedi";
                    break;
                case 5:
                    return "Venerdi";
                    break;
                case 6:
                    return "Sabato";
                    break;
                default:
                    return "";
            }
        }

    </script>

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
        integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
        integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
        crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
        integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
        crossorigin="anonymous"></script>
    <script>
        $('.toast').toast('show');

    </script>
    <div class="container" style="text-align: center;">
        <p style="font-size: 13px;">
            ©Copyright - Morgan Malavasi
        </p>
    </div>
</body>

</html>